#summary How to implement aspects like authentification, XSS protection etc. with Panama.

= Introduction =

Security is extremly important for any application. This page explains how you can implement the different aspects of security with Panama.

= Authentification =

Many web application have restricted areas, only users with proper permissions should have access to. To achieve this in Panama, there's a single method: `BaseController#beforeAction()`. This method is invoked always before an action of the controller is invoked. Although the default implementation of the `BaseController` does nothing, you can easily implement this method in your controllers to check if a user is logged in and has the proper rights to execute the requested action.

A simple implementation, based on container based security as provided by e.g. Tomcat, could look like this:

{{{
public void beforeAction(String actionName) throws ForceTargetException, AuthorizationException {
    // the login action is allowed for everyone
    if (actionName.equals("login")) {	
        return;
    }
	
    // supposed, that every logged in user has role 'user' 
    if (!context.getRequest().isUserInRole("user")) {
        // not logged in? simply render the login-form.
        throw new ForceTargetException(new TemplateTarget("login.vm"));
    } 
		
    // check if currently logged in user has 'access-all-areas' role
    if (!context.getRequest().isUserInRole("access-all-areas")) {
        // if not, create a 401 (Access Denied) HTTP Error
        throw new AuthorizationException();
    }
}
}}}

= XSS (Cross Site Scripting) Protection =