#summary Explains how to create your first Panama application with Eclipse.
#labels Phase-Implementation,Featured

== Introduction ==

Getting started with a new web framework is not an easy task per se. To make it as easy as possible for you, we've set up this page that guides you step by step in creating your first Panama powered web application with Eclipse.
For information on how to use a database with Panama (which will mosten often be the case) please see [Documentation#Persistence].

== Prerequisites ==

To follow this guide, you'll need an Eclipse IDE for Java EE Developers (3.5 or higher) and an application server (e.g. Tomcat) to the ready. (Of course you can use Panama and the examples in any other environment as well, but the example project and this page are optimized for the described environment.)

== Step By Step ==

  # Create a Dynamic Web Application with Eclipse.
  # Download the latest `panama-x.y.z.jar` and put it into your project's `WEB-INF/lib` directory.
  # Download the matching `panama-x.y.z-dependencies.zip`, and unpack it into your project's `WEB-INF/lib` directory. There should now be a list of jar Files. These are required by Panama.
  # Edit your project's `WEB-INF/web.xml` and replace everything after `</display-name>` all the way down to `</web-app>` with the following snippet:
{{{
<filter>
  <filter-name>panama</filter-name>
  <filter-class>panama.core.Dispatcher</filter-class>
</filter>
<filter-mapping>
  <filter-name>panama</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>
<welcome-file-list>
  <welcome-file>index.html</welcome-file>
</welcome-file-list>
</web-app>
}}}
  # Create a package named panama.kickstart in your project's `src` directory.
  # Create a class named `ExampleController.java` in there. Edit it and replace all of it's content with the following and save the file:
{{{
package panama.kickstart;

import panama.annotations.Action;
import panama.annotations.Controller;
import panama.core.BaseController;
import panama.core.Target;

@Controller(alias="controller")
public class ExampleController extends BaseController {
    @Action
    public Target action() {
        context.put("name", "Panama");
        return render("example.vm");
    }
}
}}}
  # Create a text-file in the same package and name it `example.vm`. Edit it, put the following text there and save it.
{{{
<html>
    <head><title>example</title></head>
    <body>
        <h1>Welcome to $name!</h1>
    </body>
</html>
}}}
  # Publish your application onto your application server.
  # Start your application server.
  # Open this URL in your browser: `http://localhost:8080/<your project's name>/controller/action`. This should show a quite large *Welcome to Panama!* on your browser. Congratulation, you've just finished your first Panama Application.

== What next ==

* Have a look at the [http://code.google.com/p/panama/source/browse/#svn%2Ftrunk%2Fpanama-examples panama-examples] project in the SVN and try it's examples.
* Read the [Documentation]
* Have a look at the [http://panama.googlecode.com/svn/trunk/panama/doc/index.html Javadoc]
* Post your questions in our [https://groups.google.com/group/panama-framework Discussion Group]